#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CovideApp.BL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Covide19DB")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadmine(admine instance);
    partial void Updateadmine(admine instance);
    partial void Deleteadmine(admine instance);
    partial void Insertville(ville instance);
    partial void Updateville(ville instance);
    partial void Deleteville(ville instance);
    partial void Inserthopital(hopital instance);
    partial void Updatehopital(hopital instance);
    partial void Deletehopital(hopital instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void Insertsiencevicstint(siencevicstint instance);
    partial void Updatesiencevicstint(siencevicstint instance);
    partial void Deletesiencevicstint(siencevicstint instance);
    partial void Insertvicstint(vicstint instance);
    partial void Updatevicstint(vicstint instance);
    partial void Deletevicstint(vicstint instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Covide19DBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<admine> admines
		{
			get
			{
				return this.GetTable<admine>();
			}
		}
		
		public System.Data.Linq.Table<ville> villes
		{
			get
			{
				return this.GetTable<ville>();
			}
		}
		
		public System.Data.Linq.Table<hopital> hopitals
		{
			get
			{
				return this.GetTable<hopital>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<siencevicstint> siencevicstints
		{
			get
			{
				return this.GetTable<siencevicstint>();
			}
		}
		
		public System.Data.Linq.Table<vicstint> vicstints
		{
			get
			{
				return this.GetTable<vicstint>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admine")]
	public partial class admine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _adresse;
		
		private string _email;
		
		private string _passworde;
		
		private System.Nullable<int> _idville;
		
		private System.Nullable<int> _idhospitale;
		
		private string _tele;
		
		private string _image;
		
		private string _contry;
		
		private string _states;
		
		private EntityRef<ville> _ville;
		
		private EntityRef<hopital> _hopital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordeChanging(string value);
    partial void OnpasswordeChanged();
    partial void OnidvilleChanging(System.Nullable<int> value);
    partial void OnidvilleChanged();
    partial void OnidhospitaleChanging(System.Nullable<int> value);
    partial void OnidhospitaleChanged();
    partial void OnteleChanging(string value);
    partial void OnteleChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OncontryChanging(string value);
    partial void OncontryChanged();
    partial void OnstatesChanging(string value);
    partial void OnstatesChanged();
    #endregion
		
		public admine()
		{
			this._ville = default(EntityRef<ville>);
			this._hopital = default(EntityRef<hopital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(30)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(30)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passworde", DbType="VarChar(30)")]
		public string passworde
		{
			get
			{
				return this._passworde;
			}
			set
			{
				if ((this._passworde != value))
				{
					this.OnpasswordeChanging(value);
					this.SendPropertyChanging();
					this._passworde = value;
					this.SendPropertyChanged("passworde");
					this.OnpasswordeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idville", DbType="Int")]
		public System.Nullable<int> idville
		{
			get
			{
				return this._idville;
			}
			set
			{
				if ((this._idville != value))
				{
					if (this._ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvilleChanging(value);
					this.SendPropertyChanging();
					this._idville = value;
					this.SendPropertyChanged("idville");
					this.OnidvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idhospitale", DbType="Int")]
		public System.Nullable<int> idhospitale
		{
			get
			{
				return this._idhospitale;
			}
			set
			{
				if ((this._idhospitale != value))
				{
					if (this._hopital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidhospitaleChanging(value);
					this.SendPropertyChanging();
					this._idhospitale = value;
					this.SendPropertyChanged("idhospitale");
					this.OnidhospitaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tele", DbType="VarChar(50)")]
		public string tele
		{
			get
			{
				return this._tele;
			}
			set
			{
				if ((this._tele != value))
				{
					this.OnteleChanging(value);
					this.SendPropertyChanging();
					this._tele = value;
					this.SendPropertyChanged("tele");
					this.OnteleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(50)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contry", DbType="VarChar(100)")]
		public string contry
		{
			get
			{
				return this._contry;
			}
			set
			{
				if ((this._contry != value))
				{
					this.OncontryChanging(value);
					this.SendPropertyChanging();
					this._contry = value;
					this.SendPropertyChanged("contry");
					this.OncontryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_states", DbType="VarChar(50)")]
		public string states
		{
			get
			{
				return this._states;
			}
			set
			{
				if ((this._states != value))
				{
					this.OnstatesChanging(value);
					this.SendPropertyChanging();
					this._states = value;
					this.SendPropertyChanged("states");
					this.OnstatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_admine", Storage="_ville", ThisKey="idville", OtherKey="id", IsForeignKey=true)]
		public ville ville
		{
			get
			{
				return this._ville.Entity;
			}
			set
			{
				ville previousValue = this._ville.Entity;
				if (((previousValue != value) 
							|| (this._ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ville.Entity = null;
						previousValue.admines.Remove(this);
					}
					this._ville.Entity = value;
					if ((value != null))
					{
						value.admines.Add(this);
						this._idville = value.id;
					}
					else
					{
						this._idville = default(Nullable<int>);
					}
					this.SendPropertyChanged("ville");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hopital_admine", Storage="_hopital", ThisKey="idhospitale", OtherKey="id", IsForeignKey=true)]
		public hopital hopital
		{
			get
			{
				return this._hopital.Entity;
			}
			set
			{
				hopital previousValue = this._hopital.Entity;
				if (((previousValue != value) 
							|| (this._hopital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hopital.Entity = null;
						previousValue.admines.Remove(this);
					}
					this._hopital.Entity = value;
					if ((value != null))
					{
						value.admines.Add(this);
						this._idhospitale = value.id;
					}
					else
					{
						this._idhospitale = default(Nullable<int>);
					}
					this.SendPropertyChanged("hopital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ville")]
	public partial class ville : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private EntitySet<admine> _admines;
		
		private EntitySet<hopital> _hopitals;
		
		private EntitySet<patient> _patients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    #endregion
		
		public ville()
		{
			this._admines = new EntitySet<admine>(new Action<admine>(this.attach_admines), new Action<admine>(this.detach_admines));
			this._hopitals = new EntitySet<hopital>(new Action<hopital>(this.attach_hopitals), new Action<hopital>(this.detach_hopitals));
			this._patients = new EntitySet<patient>(new Action<patient>(this.attach_patients), new Action<patient>(this.detach_patients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_admine", Storage="_admines", ThisKey="id", OtherKey="idville")]
		public EntitySet<admine> admines
		{
			get
			{
				return this._admines;
			}
			set
			{
				this._admines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_hopital", Storage="_hopitals", ThisKey="id", OtherKey="idville")]
		public EntitySet<hopital> hopitals
		{
			get
			{
				return this._hopitals;
			}
			set
			{
				this._hopitals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_patient", Storage="_patients", ThisKey="id", OtherKey="idville")]
		public EntitySet<patient> patients
		{
			get
			{
				return this._patients;
			}
			set
			{
				this._patients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_admines(admine entity)
		{
			this.SendPropertyChanging();
			entity.ville = this;
		}
		
		private void detach_admines(admine entity)
		{
			this.SendPropertyChanging();
			entity.ville = null;
		}
		
		private void attach_hopitals(hopital entity)
		{
			this.SendPropertyChanging();
			entity.ville = this;
		}
		
		private void detach_hopitals(hopital entity)
		{
			this.SendPropertyChanging();
			entity.ville = null;
		}
		
		private void attach_patients(patient entity)
		{
			this.SendPropertyChanging();
			entity.ville = this;
		}
		
		private void detach_patients(patient entity)
		{
			this.SendPropertyChanging();
			entity.ville = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hopital")]
	public partial class hopital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private System.Nullable<int> _idville;
		
		private string _adresse;
		
		private EntitySet<admine> _admines;
		
		private EntitySet<siencevicstint> _siencevicstints;
		
		private EntityRef<ville> _ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnidvilleChanging(System.Nullable<int> value);
    partial void OnidvilleChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    #endregion
		
		public hopital()
		{
			this._admines = new EntitySet<admine>(new Action<admine>(this.attach_admines), new Action<admine>(this.detach_admines));
			this._siencevicstints = new EntitySet<siencevicstint>(new Action<siencevicstint>(this.attach_siencevicstints), new Action<siencevicstint>(this.detach_siencevicstints));
			this._ville = default(EntityRef<ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idville", DbType="Int")]
		public System.Nullable<int> idville
		{
			get
			{
				return this._idville;
			}
			set
			{
				if ((this._idville != value))
				{
					if (this._ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvilleChanging(value);
					this.SendPropertyChanging();
					this._idville = value;
					this.SendPropertyChanged("idville");
					this.OnidvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(30)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hopital_admine", Storage="_admines", ThisKey="id", OtherKey="idhospitale")]
		public EntitySet<admine> admines
		{
			get
			{
				return this._admines;
			}
			set
			{
				this._admines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hopital_siencevicstint", Storage="_siencevicstints", ThisKey="id", OtherKey="idh")]
		public EntitySet<siencevicstint> siencevicstints
		{
			get
			{
				return this._siencevicstints;
			}
			set
			{
				this._siencevicstints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_hopital", Storage="_ville", ThisKey="idville", OtherKey="id", IsForeignKey=true)]
		public ville ville
		{
			get
			{
				return this._ville.Entity;
			}
			set
			{
				ville previousValue = this._ville.Entity;
				if (((previousValue != value) 
							|| (this._ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ville.Entity = null;
						previousValue.hopitals.Remove(this);
					}
					this._ville.Entity = value;
					if ((value != null))
					{
						value.hopitals.Add(this);
						this._idville = value.id;
					}
					else
					{
						this._idville = default(Nullable<int>);
					}
					this.SendPropertyChanged("ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_admines(admine entity)
		{
			this.SendPropertyChanging();
			entity.hopital = this;
		}
		
		private void detach_admines(admine entity)
		{
			this.SendPropertyChanging();
			entity.hopital = null;
		}
		
		private void attach_siencevicstints(siencevicstint entity)
		{
			this.SendPropertyChanging();
			entity.hopital = this;
		}
		
		private void detach_siencevicstints(siencevicstint entity)
		{
			this.SendPropertyChanging();
			entity.hopital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nom;
		
		private string _prenom;
		
		private string _genre;
		
		private string _telephone;
		
		private System.Nullable<System.DateTime> _dateN;
		
		private string _adresse;
		
		private string _cin;
		
		private System.Nullable<int> _idville;
		
		private EntitySet<siencevicstint> _siencevicstints;
		
		private EntityRef<ville> _ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OndateNChanging(System.Nullable<System.DateTime> value);
    partial void OndateNChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OncinChanging(string value);
    partial void OncinChanged();
    partial void OnidvilleChanging(System.Nullable<int> value);
    partial void OnidvilleChanged();
    #endregion
		
		public patient()
		{
			this._siencevicstints = new EntitySet<siencevicstint>(new Action<siencevicstint>(this.attach_siencevicstints), new Action<siencevicstint>(this.detach_siencevicstints));
			this._ville = default(EntityRef<ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="VarChar(10)")]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(30)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateN", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateN
		{
			get
			{
				return this._dateN;
			}
			set
			{
				if ((this._dateN != value))
				{
					this.OndateNChanging(value);
					this.SendPropertyChanging();
					this._dateN = value;
					this.SendPropertyChanged("dateN");
					this.OndateNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(30)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string cin
		{
			get
			{
				return this._cin;
			}
			set
			{
				if ((this._cin != value))
				{
					this.OncinChanging(value);
					this.SendPropertyChanging();
					this._cin = value;
					this.SendPropertyChanged("cin");
					this.OncinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idville", DbType="Int")]
		public System.Nullable<int> idville
		{
			get
			{
				return this._idville;
			}
			set
			{
				if ((this._idville != value))
				{
					if (this._ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvilleChanging(value);
					this.SendPropertyChanging();
					this._idville = value;
					this.SendPropertyChanged("idville");
					this.OnidvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_siencevicstint", Storage="_siencevicstints", ThisKey="id", OtherKey="idp")]
		public EntitySet<siencevicstint> siencevicstints
		{
			get
			{
				return this._siencevicstints;
			}
			set
			{
				this._siencevicstints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ville_patient", Storage="_ville", ThisKey="idville", OtherKey="id", IsForeignKey=true)]
		public ville ville
		{
			get
			{
				return this._ville.Entity;
			}
			set
			{
				ville previousValue = this._ville.Entity;
				if (((previousValue != value) 
							|| (this._ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ville.Entity = null;
						previousValue.patients.Remove(this);
					}
					this._ville.Entity = value;
					if ((value != null))
					{
						value.patients.Add(this);
						this._idville = value.id;
					}
					else
					{
						this._idville = default(Nullable<int>);
					}
					this.SendPropertyChanged("ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_siencevicstints(siencevicstint entity)
		{
			this.SendPropertyChanging();
			entity.patient = this;
		}
		
		private void detach_siencevicstints(siencevicstint entity)
		{
			this.SendPropertyChanging();
			entity.patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.siencevicstint")]
	public partial class siencevicstint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idv;
		
		private int _idp;
		
		private int _idh;
		
		private System.Nullable<System.DateTime> _dateDebut;
		
		private System.Nullable<System.DateTime> _datefin;
		
		private EntityRef<hopital> _hopital;
		
		private EntityRef<patient> _patient;
		
		private EntityRef<vicstint> _vicstint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidvChanging(int value);
    partial void OnidvChanged();
    partial void OnidpChanging(int value);
    partial void OnidpChanged();
    partial void OnidhChanging(int value);
    partial void OnidhChanged();
    partial void OndateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OndateDebutChanged();
    partial void OndatefinChanging(System.Nullable<System.DateTime> value);
    partial void OndatefinChanged();
    #endregion
		
		public siencevicstint()
		{
			this._hopital = default(EntityRef<hopital>);
			this._patient = default(EntityRef<patient>);
			this._vicstint = default(EntityRef<vicstint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idv", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idv
		{
			get
			{
				return this._idv;
			}
			set
			{
				if ((this._idv != value))
				{
					if (this._vicstint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvChanging(value);
					this.SendPropertyChanging();
					this._idv = value;
					this.SendPropertyChanged("idv");
					this.OnidvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idp
		{
			get
			{
				return this._idp;
			}
			set
			{
				if ((this._idp != value))
				{
					if (this._patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidpChanging(value);
					this.SendPropertyChanging();
					this._idp = value;
					this.SendPropertyChanged("idp");
					this.OnidpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idh
		{
			get
			{
				return this._idh;
			}
			set
			{
				if ((this._idh != value))
				{
					if (this._hopital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidhChanging(value);
					this.SendPropertyChanging();
					this._idh = value;
					this.SendPropertyChanged("idh");
					this.OnidhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDebut", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateDebut
		{
			get
			{
				return this._dateDebut;
			}
			set
			{
				if ((this._dateDebut != value))
				{
					this.OndateDebutChanging(value);
					this.SendPropertyChanging();
					this._dateDebut = value;
					this.SendPropertyChanged("dateDebut");
					this.OndateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datefin", DbType="DateTime")]
		public System.Nullable<System.DateTime> datefin
		{
			get
			{
				return this._datefin;
			}
			set
			{
				if ((this._datefin != value))
				{
					this.OndatefinChanging(value);
					this.SendPropertyChanging();
					this._datefin = value;
					this.SendPropertyChanged("datefin");
					this.OndatefinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hopital_siencevicstint", Storage="_hopital", ThisKey="idh", OtherKey="id", IsForeignKey=true)]
		public hopital hopital
		{
			get
			{
				return this._hopital.Entity;
			}
			set
			{
				hopital previousValue = this._hopital.Entity;
				if (((previousValue != value) 
							|| (this._hopital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hopital.Entity = null;
						previousValue.siencevicstints.Remove(this);
					}
					this._hopital.Entity = value;
					if ((value != null))
					{
						value.siencevicstints.Add(this);
						this._idh = value.id;
					}
					else
					{
						this._idh = default(int);
					}
					this.SendPropertyChanged("hopital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_siencevicstint", Storage="_patient", ThisKey="idp", OtherKey="id", IsForeignKey=true)]
		public patient patient
		{
			get
			{
				return this._patient.Entity;
			}
			set
			{
				patient previousValue = this._patient.Entity;
				if (((previousValue != value) 
							|| (this._patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._patient.Entity = null;
						previousValue.siencevicstints.Remove(this);
					}
					this._patient.Entity = value;
					if ((value != null))
					{
						value.siencevicstints.Add(this);
						this._idp = value.id;
					}
					else
					{
						this._idp = default(int);
					}
					this.SendPropertyChanged("patient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vicstint_siencevicstint", Storage="_vicstint", ThisKey="idv", OtherKey="id", IsForeignKey=true)]
		public vicstint vicstint
		{
			get
			{
				return this._vicstint.Entity;
			}
			set
			{
				vicstint previousValue = this._vicstint.Entity;
				if (((previousValue != value) 
							|| (this._vicstint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vicstint.Entity = null;
						previousValue.siencevicstints.Remove(this);
					}
					this._vicstint.Entity = value;
					if ((value != null))
					{
						value.siencevicstints.Add(this);
						this._idv = value.id;
					}
					else
					{
						this._idv = default(int);
					}
					this.SendPropertyChanged("vicstint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vicstint")]
	public partial class vicstint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _dex;
		
		private int _stock;
		
		private EntitySet<siencevicstint> _siencevicstints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndexChanging(string value);
    partial void OndexChanged();
    partial void OnstockChanging(int value);
    partial void OnstockChanged();
    #endregion
		
		public vicstint()
		{
			this._siencevicstints = new EntitySet<siencevicstint>(new Action<siencevicstint>(this.attach_siencevicstints), new Action<siencevicstint>(this.detach_siencevicstints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dex", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string dex
		{
			get
			{
				return this._dex;
			}
			set
			{
				if ((this._dex != value))
				{
					this.OndexChanging(value);
					this.SendPropertyChanging();
					this._dex = value;
					this.SendPropertyChanged("dex");
					this.OndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock", DbType="Int NOT NULL")]
		public int stock
		{
			get
			{
				return this._stock;
			}
			set
			{
				if ((this._stock != value))
				{
					this.OnstockChanging(value);
					this.SendPropertyChanging();
					this._stock = value;
					this.SendPropertyChanged("stock");
					this.OnstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vicstint_siencevicstint", Storage="_siencevicstints", ThisKey="id", OtherKey="idv")]
		public EntitySet<siencevicstint> siencevicstints
		{
			get
			{
				return this._siencevicstints;
			}
			set
			{
				this._siencevicstints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_siencevicstints(siencevicstint entity)
		{
			this.SendPropertyChanging();
			entity.vicstint = this;
		}
		
		private void detach_siencevicstints(siencevicstint entity)
		{
			this.SendPropertyChanging();
			entity.vicstint = null;
		}
	}
}
#pragma warning restore 1591
